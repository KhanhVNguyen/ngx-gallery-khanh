import { EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, Renderer } from '@angular/core';
import { DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';
import { NgxGalleryAction } from './ngx-gallery-action.model';
import { NgxGalleryHelperService } from './ngx-gallery-helper.service';
export declare class NgxGalleryPreviewComponent implements OnChanges, OnInit {
    sanitization: DomSanitizer;
    elementRef: ElementRef;
    helperService: NgxGalleryHelperService;
    renderer: Renderer;
    src: any;
    srcIndex: number;
    description: string;
    showSpinner: boolean;
    positionLeft: number;
    positionTop: number;
    zoomValue: number;
    loading: boolean;
    rotateValue: number;
    index: number;
    tab: number;
    tabImages: any;
    star: number;
    isProject: boolean;
    images: any[];
    smallImages: any[];
    descriptions: string[];
    showDescription: boolean;
    swipe: boolean;
    fullscreen: boolean;
    forceFullscreen: boolean;
    closeOnClick: boolean;
    closeOnEsc: boolean;
    keyboardNavigation: boolean;
    arrowPrevIcon: string;
    arrowNextIcon: string;
    closeIcon: string;
    fullscreenIcon: string;
    spinnerIcon: string;
    autoPlay: boolean;
    autoPlayInterval: number;
    autoPlayPauseOnHover: boolean;
    infinityMove: boolean;
    zoom: boolean;
    zoomStep: number;
    zoomMax: number;
    zoomMin: number;
    zoomInIcon: string;
    zoomOutIcon: string;
    animation: boolean;
    actions: NgxGalleryAction[];
    rotate: boolean;
    rotateLeftIcon: string;
    rotateRightIcon: string;
    download: boolean;
    downloadIcon: string;
    onOpen: EventEmitter<{}>;
    onClose: EventEmitter<{}>;
    onActiveChange: EventEmitter<number>;
    previewImage: ElementRef;
    previewVideo: ElementRef;
    isOpen: boolean;
    timer: any;
    initialX: number;
    initialY: number;
    initialLeft: number;
    initialTop: number;
    isMove: boolean;
    keyDownListener: Function;
    rooms: any;
    propertyView: any;
    facilities: any;
    dining: any;
    other: any;
    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryHelperService, renderer: Renderer);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onKeyDown(e: any): void;
    open(index: number): void;
    close(): void;
    imageMouseEnter(): void;
    imageMouseLeave(): void;
    startAutoPlay(): void;
    stopAutoPlay(): void;
    showNext(): boolean;
    selectImage(index: any): void;
    showPrev(): void;
    canShowNext(): boolean;
    canShowPrev(): boolean;
    manageFullscreen(): void;
    getSafeUrl(image: any): SafeUrl;
    getSafeUrl2(image: string): SafeUrl;
    zoomIn(): void;
    zoomOut(): void;
    rotateLeft(): void;
    rotateRight(): void;
    getTransform(): SafeStyle;
    canZoomIn(): boolean;
    canZoomOut(): boolean;
    canDragOnZoom(): boolean;
    mouseDownHandler(e: any): void;
    mouseUpHandler(e: any): void;
    mouseMoveHandler(e: any): void;
    getClientX(e: any): number;
    getClientY(e: any): number;
    resetPosition(): void;
    isKeyboardNext(e: any): boolean;
    isKeyboardPrev(e: any): boolean;
    isKeyboardEsc(e: any): boolean;
    openFullscreen(): void;
    closeFullscreen(): void;
    show(first?: boolean): void;
    _show(): void;
    isLoaded(img: any): boolean;
    getThumbnailLeft(index: number): SafeStyle;
    getThumbnailTop(index: number): SafeStyle;
    getThumbnailPosition(index: number, count: number): SafeStyle;
    getThumbnailWidth(): SafeStyle;
    getThumbnailHeight(): SafeStyle;
    getThumbnailDimension(count: number): SafeStyle;
    getSafeStyle(value: string): SafeStyle;
    switchTab(): void;
}
